[versions]
androidx-lifecycle = "2.9.3"
composeHotReload = "1.0.0-beta06"
composeMultiplatform = "1.8.2"
junit = "4.13.2"
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
kotlinx-serialization-plugin = "2.2.20"
material-expressive = "1.9.0-alpha04"
sqlite-driver = "2.0.1"
splitpane = "1.10.0-alpha01"
coil-compose = "3.3.0"
koin = "4.1.1"
compottie = "2.0.0"
voyager = "1.1.0-beta02"
ktor = "3.2.3"
logback = "1.5.6"
media-player-version = "1.0.46"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlite-driver" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "kotlinx-serialization" }
splitpane-desktop = { module = "org.jetbrains.compose.components:components-splitpane-desktop", version.ref = "splitpane" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil-compose" }
coil-network = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil-compose" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil-compose" }

material-expressive = { module = "org.jetbrains.compose.material3:material3", version.ref = "material-expressive" }

# Koin
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

# Compottie
compottie = { module = "io.github.alexzhirkevich:compottie", version.ref = "compottie" }
compottie-lite = { module = "io.github.alexzhirkevich:compottie-lite", version.ref = "compottie" }
compottie-dot = { module = "io.github.alexzhirkevich:compottie-dot", version.ref = "compottie" }
compottie-network = { module = "io.github.alexzhirkevich:compottie-network", version.ref = "compottie" }
compottie-resources = { module = "io.github.alexzhirkevich:compottie-resources", version.ref = "compottie" }

# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
voyager = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }

# MediaPlayer
media-player = {module = "network.chaintech:compose-multiplatform-media-player", version.ref = "media-player-version"}

[plugins]
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
sqliteDelight = { id = "app.cash.sqldelight", version.ref = "sqlite-driver" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinx-serialization-plugin" }